// Generated by CoffeeScript 1.6.3
/*
  开飞机的苏克，开启写轮眼“摇一摇”。~~~~(>_<)~~~~
                   |
                   |
              ___-/_\-___
   _____________/( . )\_____________
  *    |    |  (  \_/  )  |    |    *
      *|*  *|*  \_-+-_/  *|*  *|*
*/


(function() {
  var Airplane, AirplaneView, map, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  map = "table.base-map>tbody";

  $.fn.extend({
    forward: function(i) {
      var $ball, $tr;
      $tr = $(this);
      $ball = $tr.find("td:eq(" + i + ")>div").addClass("sprite sprite-ball").css("visibility", "visible");
      return $ball.fadeOut(168, function() {
        $ball.css({
          "visibility": "hide",
          "display": "block"
        }).removeClass();
        if ($tr.prev() != null) {
          return $tr.prev().forward(i);
        }
      });
    }
  });

  Airplane = (function(_super) {
    __extends(Airplane, _super);

    function Airplane() {
      _ref = Airplane.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Airplane.prototype.defaults = {
      airplaneSeat: 0
    };

    return Airplane;

  })(Backbone.Model);

  AirplaneView = (function(_super) {
    __extends(AirplaneView, _super);

    function AirplaneView() {
      _ref1 = AirplaneView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    AirplaneView.prototype.tagName = "div";

    AirplaneView.prototype.className = "airplane";

    AirplaneView.prototype.initialize = function() {
      var $tblMap, tdCount, trCount;
      _.bindAll(this, "render", "moveLeft", "moveRight", "shot");
      $tblMap = $(map);
      trCount = $tblMap.find("tr").size();
      tdCount = $tblMap.find("tr:first td").size();
      this.$airplaneTr = $tblMap.find("tr:gt(" + (trCount - 7) + ")").filter("tr:lt(5)");
      this.model = new Airplane({
        airplaneSeat: parseInt(tdCount / 2) - 4
      });
      return this.render();
    };

    AirplaneView.prototype.render = function() {
      var seat;
      seat = this.model.get("airplaneSeat");
      return this.$airplaneTr.each(function(i, tr) {
        var $matrix;
        $matrix = $(tr).find("td:gt(" + seat + ")").filter("td:lt(5)");
        $matrix.addClass("airplane-matrix");
        if (i === 1) {
          $matrix.eq(2).addClass("airplane");
        }
        if (i === 2) {
          $matrix.filter("td:gt(0)").filter("td:lt(3)").addClass("airplane");
        }
        if (i === 3) {
          $matrix.addClass("airplane");
        }
        if (i === 4) {
          return $matrix.filter("td:gt(0)").filter("td:lt(3)").addClass("airplane");
        }
      });
    };

    AirplaneView.prototype.moveLeft = function(selector) {
      var flag;
      flag = true;
      if (selector === void 0) {
        selector = this.className;
      }
      this.$airplaneTr.each(function() {
        var $matrix, $newTd;
        $matrix = $(this).find("td." + selector);
        $newTd = $matrix.first().prev();
        if ($newTd.hasClass("snake-road")) {
          flag = false;
          return false;
        } else {
          $newTd.addClass(selector);
          return $matrix.last().removeClass(selector);
        }
      });
      return flag;
    };

    AirplaneView.prototype.moveRight = function(selector) {
      var flag;
      flag = true;
      if (selector === void 0) {
        selector = this.className;
      }
      this.$airplaneTr.each(function() {
        var $matrix, $newTd;
        $matrix = $(this).find("td." + selector);
        $newTd = $matrix.last().next();
        if ($newTd.hasClass("snake-road")) {
          flag = false;
          return false;
        } else {
          $newTd.addClass(selector);
          return $matrix.first().removeClass(selector);
        }
      });
      return flag;
    };

    AirplaneView.prototype.shot = function() {
      var $gun, $tdRow, $tr, column;
      $gun = this.$airplaneTr.eq(1).find("td." + this.className);
      $tr = $gun.closest("tr");
      $tdRow = $tr.find("td");
      column = $tdRow.index($gun);
      return $tr.prev().forward(column);
    };

    return AirplaneView;

  })(Backbone.View);

  $(document).ready(function() {
    var view;
    view = new AirplaneView();
    return $(document).keydown(function(e) {
      if (e.keyCode === 37) {
        if (view.moveLeft("airplane-matrix")) {
          return view.moveLeft();
        }
      } else if (e.keyCode === 39) {
        if (view.moveRight("airplane-matrix")) {
          return view.moveRight();
        }
      } else if (e.keyCode === 32) {
        return view.shot();
      }
    });
  });

}).call(this);

/*
//@ sourceMappingURL=airplane.map
*/
